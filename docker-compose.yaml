version: '3.8'

services:
  selenium:
    image: selenium/standalone-firefox:latest
    ports:
      - "4444:4444"
    environment:
      - SE_NODE_MAX_SESSIONS=100
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_NODE_MAX_SESSIONS=100

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444"]

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - SELENIUM_HOST=selenium
      - SELENIUM_PORT=4444
      - HEADLESS=true
      - DEBUG=false
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "8001:8000"
    command: "uvicorn app.main:app --host 0.0.0.0 --port 8000"
    depends_on:
      - selenium
    healthcheck:
      test: ["CMD", "curl", "-f", "http://selenium:4444"]
      interval: 30s

  redis:
    image: redis:latest
    ports:
      - "6999:6379"
    volumes:
      - redis-data:/data

  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - SELENIUM_HOST=selenium
      - SELENIUM_PORT=4444
      - HEADLESS=true
      - DEBUG=false
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A worker.worker.celery_app worker --loglevel=info --concurrency=30
    depends_on:
      - api
      - redis
      - selenium

  flower:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - SELENIUM_HOST=selenium
      - SELENIUM_PORT=4444
      - HEADLESS=true
      - DEBUG=false
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A worker.worker.celery_app flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - api
      - redis
      - celery_worker
networks:
    default:

volumes:
    redis-data:
